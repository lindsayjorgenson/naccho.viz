% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pie.R
\name{create_pie}
\alias{create_pie}
\title{NACHCO Pie Chart}
\usage{
create_pie(
  data,
  variable,
  value,
  my_colors = naccho.viz::naccho_colors,
  data_format = "{value:.0f}\%",
  title_text = "",
  subtitle_text = NULL,
  caption_text = NULL,
  label_size = "15px",
  legend_enable = FALSE,
  allow_export = TRUE,
  accessible_desc = ""
)
}
\arguments{
\item{data}{the data frame to create the map.}

\item{variable}{object; from the data frame, ideally a character or factor.}

\item{value}{numeric; from the data frame.}

\item{my_colors}{vector or character string; one character or a vector of characters, which must be defined hex values. Defaults to naccho.viz::naccho_colors.}

\item{data_format}{character string; format for the y-axis numbers, defaults to "{value:,.0f}". This is used to adjust decimals or add characters after the number. Examples follow. "{value}\%" add a \% sign and does not specify decimals. "{value:.1f}" specifies one decimal point. "{value:,.0f}" specifies one decimal and adds a comma every three values. "{value}\%" adds a percent sign. You can also add words to the value by doing the following: "{value} words here".}

\item{title_text}{character string; title of the visualization. Defaults to nothing.}

\item{subtitle_text}{character string; subtitle to appear underneath the title. Defaults to nothing.}

\item{caption_text}{character string; source and data notes to appear underneath the figure. Defaults to nothing.}

\item{label_size}{character such as "13px", defaults to 13px.}

\item{legend_enable}{boolean, TRUE or FALSE, where TRUE enables the legend. Defaults to FALSE.}

\item{allow_export}{boolean, TRUE or FALSE, where true allows the visualization to be exported.}

\item{accessible_desc}{character string; alternative text description of the figure for screen readers.}
}
\value{
A pie chart.
}
\description{
NACHCO Pie Chart
}
\examples{

test_data <- data.frame(
 avatar = c("Aang", "Korra", "Kyoshi"),
 n = c(33, 23, 44)
)
create_pie(
 data = test_data,
 variable = "avatar",
 value = "n"
)


}
